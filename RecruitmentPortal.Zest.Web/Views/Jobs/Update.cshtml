@model RecruitmentPortal.Zest.Common.ServiceModels.SingleJobDescriptionResult


@{
    ViewBag.Title = "Edit";
}

<div class="page-header">
    <div class="row">
        <div class="col-sm-6" style="padding-bottom:10px">
            <div class="col-sm-12">
                <h1> Edit Job</h1>
            </div>
        </div>
    </div>
</div>

<div class="panel-default">
    <div class="panel-body">
        <h1 style="display:none;"></h1>
        <div id="MainContent_vs" class="alert alert-danger" style="display:none;"></div>

        <span id="MainContent_lblMessage"></span>
        <span id="MainContent_CVPage" style="display:none;"></span>
        <div class="clear"></div>


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal row">
                <div class="col-md-6">


                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @*@Html.HiddenFor(model => model.JD_Id)*@

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.JD_Id, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10" style="width:50%; margin-left:10%">
                                @Html.EditorFor(model => model.JD_Id, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.JD_Id, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.Job_Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        @*@if (Session["role"] != null && Session["role"].ToString() == "1" || Session["role"].ToString() == "3" || Session["role"].ToString() == "4")
                            {*@
                        <div class="col-md-10" style="width:50%; margin-left:10%">

                            @Html.EditorFor(model => model.Job_Title, new { htmlAttributes = new { @class = "form-control" } })

                            @Html.ValidationMessageFor(model => model.Job_Title, "", new { @class = "text-danger" })
                        </div>
                        @*}*@

                        @*@if (Session["role"].ToString() == "2")
                            {
                                <div class="col-md-10" style="width:50%; margin-left:10%">
                                    :
                                    @Html.DisplayFor(model => model.Job_Title, new { htmlAttributes = new { @class = "form-control" } })

                                </div>
                            }*@
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Resource_Designation, htmlAttributes: new { @class = "control-label col-md-2" })
                        @*@if (Session["role"] != null && Session["role"].ToString() == "1" || Session["role"].ToString() == "3" || Session["role"].ToString() == "4")
                            {*@
                        <div class="col-md-10" style="width:50%; margin-left:10%">
                            @Html.EditorFor(model => model.Resource_Designation, new { htmlAttributes = new { @class = "form-control" } })
                            @*@Html.DropDownList("Job_Type", new List<SelectListItem>(){
                                new SelectListItem() { Text= "Developer", Value = "Developer" },
                                new SelectListItem() { Text= "Quality Analyst", Value = "Quality Analyst", Selected = true }
                                }, "Select ...")*@
                            @Html.ValidationMessageFor(model => model.Resource_Designation, "", new { @class = "text-danger" })
                        </div>
                        @*}
                            @if (Session["role"].ToString() == "2")
                            {
                                <div class="col-md-10" style="width:50%; margin-left:10%">
                                    :
                                    @Html.DisplayFor(model => model.Resource_Designation)

                                </div>
                            }*@
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Job_Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        @*@if (Session["role"] != null && Session["role"].ToString() == "1" || Session["role"].ToString() == "3" || Session["role"].ToString() == "4")
                            {*@

                        <div class="col-md-10" style="width:50%; margin-left:10%">
                            @Html.EditorFor(model => model.Job_Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Job_Description, "", new { @class = "text-danger" })
                        </div>
                        @*}
                            @if (Session["role"].ToString() == "2")
                            {
                                <div class="col-md-10" style="width:50%; margin-left:10%">
                                    :
                                    @Html.DisplayFor(model => model.Job_Description)

                                </div>
                            }*@

                    </div>

                    <div class="form-group">

                        @Html.LabelFor(model => model.Essential_Skills, htmlAttributes: new { @class = "control-label col-md-2" })
                        @*@if (Session["role"] != null && Session["role"].ToString() == "1" || Session["role"].ToString() == "3" || Session["role"].ToString() == "4")
                            {*@
                        <div class="col-md-10" style="width:50%; margin-left:10%">
                            @Html.EditorFor(model => model.Essential_Skills, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Essential_Skills, "", new { @class = "text-danger" })
                        </div>
                        @*}*@

                        @*@if (Session["role"].ToString() == "2")
                            {
                                <div class="col-md-10" style="width:50%; margin-left:10%">
                                    :
                                    @Html.DisplayFor(model => model.Essential_Skills)

                                </div>
                            }*@
                    </div>

                    <div class="form-group">

                        @Html.LabelFor(model => model.Desired_Skills, htmlAttributes: new { @class = "control-label col-md-2" })
                        @*@if (Session["role"] != null && Session["role"].ToString() == "1" || Session["role"].ToString() == "3" || Session["role"].ToString() == "4")
                            {*@
                        <div class="col-md-10" style="width:50%; margin-left:10%">
                            @Html.EditorFor(model => model.Desired_Skills, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Desired_Skills, "", new { @class = "text-danger" })
                        </div>
                        @*}

                            @if (Session["role"].ToString() == "2")
                            {
                                <div class="col-md-10" style="width:50%; margin-left:10%">
                                    :
                                    @Html.DisplayFor(model => model.Desired_Skills)

                                </div>
                            }*@
                    </div>

                    <div class="form-group">

                        @Html.LabelFor(model => model.Job_Type, htmlAttributes: new { @class = "control-label col-md-2" })
                        @*@if (Session["role"] != null && Session["role"].ToString() == "1" || Session["role"].ToString() == "3" || Session["role"].ToString() == "4")
                            {*@
                        <div class="col-md-10" style="width:50%; margin-left:10%">
                            @*@Html.EditorFor(model => model.Job_Type, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.DropDownListFor(model=> model.Job_Type, new List<SelectListItem>()
                                                                                            {
                                                                                            new SelectListItem() { Text= "Permanent", Value = "Permanent" },
                                                                                            new SelectListItem() { Text= "Temporary", Value = "Temporary"}
                                                                                            }, new { @class = "form-control" })


                            @Html.ValidationMessageFor(model => model.Job_Type, "", new { @class = "text-danger" })
                        </div>
                        @*}
                            @if (Session["role"].ToString() == "2")
                            {
                                <div class="col-md-10" style="width:50%; margin-left:10%">
                                    :
                                    @Html.DisplayFor(model => model.Job_Type)

                                </div>
                            }*@
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
                        @*@if (Session["role"] != null && Session["role"].ToString() == "1" || Session["role"].ToString() == "3" || Session["role"].ToString() == "4")
                            {*@
                        <div class="col-md-10" style="width:50%; margin-left:10%">
                            @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control" } })
                            @*@Html.DropDownList("Job_Type", new List<SelectListItem>()
                                {
                                new SelectListItem() { Text= "Java", Value = "Java" },
                                 new SelectListItem() { Text= "Xamarin", Value = "Xamarin" },
                                  new SelectListItem() { Text= "php", Value = "php" },
                                new SelectListItem() { Text= ".Net", Value = ".Net", Selected = true }
                                }, "Select ...")*@
                            @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                        </div>
                        @*}*@
                        @*@if (Session["role"].ToString() == "2")
                            {
                                <div class="col-md-10" style="width:50%; margin-left:10%">
                                    :
                                    @Html.DisplayFor(model => model.Department)

                                </div>
                            }*@
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
                        @*@if (Session["role"] != null && Session["role"].ToString() == "1" || Session["role"].ToString() == "3" || Session["role"].ToString() == "4")
                            {*@
                        <div class="col-md-10" style="width:50%; margin-left:10%">
                            @Html.EditorFor(model => model.Priority, new { htmlAttributes = new { @class = "form-control" } })
                            @*@Html.DropDownList("Job_Type", new List<SelectListItem>()
                                {
                                new SelectListItem() { Text= "High", Value = "High" },
                                 new SelectListItem() { Text= "Low", Value = "Low" },

                                new SelectListItem() { Text= "Medium", Value = "Medium", Selected = true }
                                }, "Select ...")*@
                            @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
                        </div>
                        @*}
                            @if (Session["role"].ToString() == "2")
                            {
                                <div class="col-md-10" style="width:50%; margin-left:10%">
                                    :
                                    @Html.DisplayFor(model => model.Priority)

                                </div>
                            }*@
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Job_Experience, htmlAttributes: new { @class = "control-label col-md-2" })
                        @*@if (Session["role"] != null && Session["role"].ToString() == "1" || Session["role"].ToString() == "3" || Session["role"].ToString() == "4")
                            {*@
                        <div class="col-md-10" style="width:50%; margin-left:10%">
                            @Html.EditorFor(model => model.Job_Experience, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Job_Experience, "", new { @class = "text-danger" })
                        </div>
                        @*}
                            @if (Session["role"].ToString() == "2")
                            {
                                <div class="col-md-10" style="width:50%; margin-left:10%">
                                    :
                                    @Html.DisplayFor(model => model.Job_Experience)

                                </div>
                            }*@
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Other_Skills, htmlAttributes: new { @class = "control-label col-md-2" })
                        @*@if (Session["role"] != null && Session["role"].ToString() == "1" || Session["role"].ToString() == "3" || Session["role"].ToString() == "4")
                            {*@
                        <div class="col-md-10" style="width:50%; margin-left:10%">
                            @Html.EditorFor(model => model.Other_Skills, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Other_Skills, "", new { @class = "text-danger" })
                        </div>
                        @*}
                            @if (Session["role"].ToString() == "2")
                            {
                                <div class="col-md-10" style="width:50%; margin-left:10%">
                                    :
                                    @Html.DisplayFor(model => model.Other_Skills)

                                </div>
                            }*@
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                        @*@if (Session["role"] != null && Session["role"].ToString() == "1" || Session["role"].ToString() == "3" || Session["role"].ToString() == "4")
                        {*@
                            <div class="col-md-10" style="width:50%; margin-left:10%">
                                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                            </div>
                        @*}
                        @if (Session["role"].ToString() == "2")
                        {
                            <div class="col-md-10" style="width:50%; margin-left:10%">
                                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                            </div>
                        }*@
                    </div>
                    @{
                        if (Session["role"] != null && Session["role"].ToString() == "4")
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })

                                <div class="col-md-10" style="width:50%; margin-left:10%">
                                    @Html.DropDownList("ddlStatus", new List<SelectListItem>()
                {
                new SelectListItem() { Text= "Approved", Value = "Approved" , Selected = true },
                new SelectListItem() { Text= "Rejected", Value = "Rejected" },
                new SelectListItem() { Text= "Pending", Value = "Pending" },
                }, new { @class = "form-control" })
                                    @*@Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })*@
                                    @*@Html.DropDownListFor(model => model.Status, ViewBag.UsersList as SelectList, new { @class = "form-control" })*@
                                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }
                        @*else
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })

                                <div class="col-md-10" style="width:50%; margin-left:10%">
                                    @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }*@
                    }

                    <div class="form-group">
                        @Html.LabelFor(model => model.Job_Location, htmlAttributes: new { @class = "control-label col-md-2" })
                        @*@if (Session["role"] != null && Session["role"].ToString() == "1" || Session["role"].ToString() == "3" || Session["role"].ToString() == "4")
                            {*@
                        <div class="col-md-10" style="width:50%; margin-left:10%">
                            @Html.EditorFor(model => model.Job_Location, new { htmlAttributes = new { @class = "form-control" } })
                            @*@Html.DropDownList("Job_Type", new List<SelectListItem>()
                                {
                                new SelectListItem() { Text= "Ahmedabad", Value = "Ahmedabad" },


                                new SelectListItem() { Text= "Pune", Value = "Pune", Selected = true }
                                }, "Select ...")*@
                            @Html.ValidationMessageFor(model => model.Job_Location, "", new { @class = "text-danger" })
                        </div>
                        @*}
                            @if (Session["role"].ToString() == "2")
                            {
                                <div class="col-md-10" style="width:50%; margin-left:10%">
                                    :
                                    @Html.DisplayFor(model => model.Job_Location)

                                </div>
                            }*@
                    </div>

                    @if (Session["role"] != null && Session["role"].ToString() == "4")
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10" style="width:50%; margin-left:10%">
                                @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
                            </div>

                        </div>
                    }

                    @if (Session["role"] != null && Session["role"].ToString() == "2")
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.Assign_Hr, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10" style="width:50%; margin-left:10%">
                                @*@Html.EditorFor(model => model.Assign_Hr, new { htmlAttributes = new { @class = "form-control" } })*@
                                @*@Html.DropDownList("ddlAssignHR", ViewBag.UsersList as SelectList, new { @class = "form-control" })*@
                                @Html.DropDownList("ddlAssignHR", new List<SelectListItem>()
{
new SelectListItem() { Text= "Dhwani Gurjar", Value = "Dhwani Gurjar" , Selected = true },
new SelectListItem() { Text= "Manali Ved", Value = "Manali Ved" },
new SelectListItem() { Text= "Hardi Dalal", Value = "Hardi Dalal" },
}, new { @class = "form-control" })
                                @*@Html.DropDownListFor(model=>model.Assign_Hr, ViewBag.UsersList as SelectList, new { @class = "form-control" })*@
                                @Html.ValidationMessageFor(model => model.Assign_Hr, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }



                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            
                            <input type="submit" value="Save" class="btn btn-success ic-save" style="margin-left:15px;" />
                            @Html.ActionLink("Cancel", "JobList", null, new { @class = "btn btn-danger ic-danger", @style = "color:white; margin-left:15px;" })
                        </div>
                    </div>
                </div>
            </div>
        }

        @*<div>
                @Html.ActionLink("Back to List", "JobList")
            </div>*@

    </div>
</div>

