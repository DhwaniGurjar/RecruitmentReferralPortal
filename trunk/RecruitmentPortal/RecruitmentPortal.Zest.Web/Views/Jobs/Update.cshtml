@model RecruitmentPortal.Zest.Common.ServiceModels.InsertJobDescriptionResult


@{
    ViewBag.Title = "Edit";
}

<div class="page-header">
    <div class="row">
        <div class="col-sm-6" style="padding-bottom:10px">
            <div class="col-sm-12">
                <h1> Edit Job</h1>
            </div>
        </div>
    </div>
</div>

<div class="panel-default">
    <div class="panel-body">
        <h1 style="display:none;"></h1>
        <div id="MainContent_vs" class="alert alert-danger" style="display:none;"></div>

        <span id="MainContent_lblMessage"></span>
        <span id="MainContent_CVPage" style="display:none;"></span>
        <div class="clear"></div>


        @using (Html.BeginForm("Update", "Jobs", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal row">
                <div class="col-md-6">


                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.JD_Id)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Job_Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10" style="width:50%; margin-left:10%">
                            @Html.EditorFor(model => model.Job_Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Job_Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Resource_Designation, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10" style="width:50%; margin-left:10%">
                            @*@Html.EditorFor(model => model.Resource_Designation, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.DropDownList("Job_Type", new List<SelectListItem>()
{
new SelectListItem() { Text= "Developer", Value = "Developer" },
new SelectListItem() { Text= "Quality Analyst", Value = "Quality Analyst", Selected = true }
}, "Select ...")
                            @Html.ValidationMessageFor(model => model.Resource_Designation, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Job_Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10" style="width:50%; margin-left:10%">
                            @Html.EditorFor(model => model.Job_Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Job_Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Essential_Skills, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10" style="width:50%; margin-left:10%">
                            @Html.EditorFor(model => model.Essential_Skills, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Essential_Skills, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Desired_Skills, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10" style="width:50%; margin-left:10%">
                            @Html.EditorFor(model => model.Desired_Skills, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Desired_Skills, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Job_Type, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10" style="width:50%; margin-left:10%">
                            @*@Html.EditorFor(model => model.Job_Type, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.DropDownList("Job_Type", new List<SelectListItem>()
                                                  {
                                                  new SelectListItem() { Text= "Permanent", Value = "Permanent" },
                                                  new SelectListItem() { Text= "Temporary", Value = "Temporary", Selected = true }
                                                  }, "Select ...")
                            @Html.ValidationMessageFor(model => model.Job_Type, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10" style="width:50%; margin-left:10%">
                            @*@Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.DropDownList("Job_Type", new List<SelectListItem>()
                          {
                          new SelectListItem() { Text= "Java", Value = "Java" },
                           new SelectListItem() { Text= "Xamarin", Value = "Xamarin" },
                            new SelectListItem() { Text= "php", Value = "php" },
                          new SelectListItem() { Text= ".Net", Value = ".Net", Selected = true }
                          }, "Select ...")
                            @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10" style="width:50%; margin-left:10%">
                            @*@Html.EditorFor(model => model.Priority, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.DropDownList("Job_Type", new List<SelectListItem>()
                          {
                          new SelectListItem() { Text= "High", Value = "High" },
                           new SelectListItem() { Text= "Low", Value = "Low" },
                            
                          new SelectListItem() { Text= "Medium", Value = "Medium", Selected = true }
                          }, "Select ...")
                            @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Job_Experience, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10" style="width:50%; margin-left:10%">
                            @Html.EditorFor(model => model.Job_Experience, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Job_Experience, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Other_Skills, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10" style="width:50%; margin-left:10%">
                            @Html.EditorFor(model => model.Other_Skills, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Other_Skills, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10" style="width:50%; margin-left:10%">
                            @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10" style="width:50%; margin-left:10%">
                            @*@Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.DropDownList("Job_Type", new List<SelectListItem>()
  {
  new SelectListItem() { Text= "Approved", Value = "Approved" },
   new SelectListItem() { Text= "Rejected", Value = "Rejected" },

  new SelectListItem() { Text= "Pending", Value = "Pending", Selected = true }
  }, "Select ...")
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Job_Location, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10" style="width:50%; margin-left:10%">
                            @*@Html.EditorFor(model => model.Job_Location, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.DropDownList("Job_Type", new List<SelectListItem>()
  {
  new SelectListItem() { Text= "Ahmedabad", Value = "Ahmedabad" },
  

  new SelectListItem() { Text= "Pune", Value = "Pune", Selected = true }
  }, "Select ...")
                            @Html.ValidationMessageFor(model => model.Job_Location, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Modified_On, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10" style="width:50%; margin-left:10%">
                            @Html.EditorFor(model => model.Modified_On, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Modified_On, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Modified_By, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10" style="width:50%; margin-left:10%">
                            @Html.EditorFor(model => model.Modified_By, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Modified_By, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>

    </div>
</div>

